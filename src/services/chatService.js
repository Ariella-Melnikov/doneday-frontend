import axios from 'axios'

const BASE_URL = 'https://api.openai.com/v1/completions'
const API_KEY = 'sk-proj-KlazichQ2l0j77H3rxTqT3BlbkFJ1mAFLXizl7TsNqKdsr7A'

export async function generateBoardFromDescription(description) {
    const prompt = `Generate a detailed single board structure in an accurate JSON format for the following project description: "${description}" make it not too long.
Only return the JSON object, nothing else. 
make it minimal dont write a lot so you wont get to your length
Example JSON:
{
    "activities": [],
    "archivedAt": null,
    "title": "Example Project Board",
    "description": "An example project board generated by AI.",
    "cmpsOrder": ["checkbox", "title", "dueDate", "memberIds", "files", "priority", "recording", "description"],
    "isStarred": false,
    "label": "project",
    "members": [],
    "_id": "FDSAF43", (random each time)
    "groups": [
        {
            "title": "Some group title...",
            "archivedAt": null,
            "style": {"backgroundColor": "rgb(255, 90, 196)"},
            "_id": "tclms2", (random each time)
            "tasks": [
                {
                    "archivedAt": null,
                    "title": "some task title...",
                    "byMember": null,
                    "comments": [],
                    "checklists": [],
                    "description": "Description for Task 1",
                    "dueDate": "2024-02-24",
                    "memberIds": [],
                    "priority": "Critical",
                    "status": "Not started",
                    "_id": "FSAD43" (random each time)
                }
            ]
        }
    ]
}`

    try {
        const response = await axios.post(
            BASE_URL,
            {
                model: 'gpt-3.5-turbo-instruct',
                prompt: prompt,
                max_tokens: 1500,
                temperature: 0.7,
                n: 1,
            },
            {
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${API_KEY}`,
                },
            }
        )

        const answer = response.data.choices[0].text.trim()
        return JSON.parse(answer)
    } catch (error) {
        console.error('Error fetching AI generated board:', error.response ? error.response.data : error.message)
        throw error
    }
}
